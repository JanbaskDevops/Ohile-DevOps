Waiting for resource to join

Today's topic:
=============
1) Docker
2) Docker image
3) Container
4) Docker networking

Problem in IT industry before Docker.
Dev Test preprd Prod DR

1) Wall of conflict where is the issue.
We are doing same deployment activity again and again

Link: https://github.com/spring-projects/spring-petclinic #Ubuntu
git clone https://github.com/spring-projects/spring-petclinic.git
cd spring-petclinic
#./mvnw package 
./mvnw clean package -DskipTests
java -jar target/*.jar

[ERROR] Tests run: 47, Failures: 0, Errors: 2, Skipped: 0
[INFO] 
[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  09:50 min
[INFO] Finished at: 2024-04-06T14:51:47Z
[INFO] ------------------------------------------------------------------------
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-surefire-plugin:3.1.2:test (default-test) on project spring-petclinic: 
[ERROR] 
[ERROR] Please refer to /root/spring-petclinic/target/surefire-reports for the individual test results.
[ERROR] Please refer to dump files (if any exist) [date].dump, [date]-jvmRun[N].dump and [date].dumpstream.
[ERROR] -> [Help 1]
[ERROR] 
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR] 
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException

We need to report to Development Team, because we are using intruction which are provided by them

Once we applied solution provided by them, we are able to see application is compiling correctly

[INFO] Building jar: /root/spring-petclinic/target/spring-petclinic-3.2.0-SNAPSHOT.jar
[INFO] 
[INFO] --- spring-boot:3.2.1:repackage (repackage) @ spring-petclinic ---
[INFO] Replacing main artifact /root/spring-petclinic/target/spring-petclinic-3.2.0-SNAPSHOT.jar with repackaged archive, adding nested dependencies in BOOT-INF/.
[INFO] The original artifact has been renamed to /root/spring-petclinic/target/spring-petclinic-3.2.0-SNAPSHOT.jar.original
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  22.706 s
[INFO] Finished at: 2024-04-06T14:55:00Z
[INFO] ------------------------------------------------------------------------

Refer: https://github.com/spring-projects/spring-petclinic/issues/1277 [for issue reported to deveopment team]

Lets say same intruction is working on Dev, but not working on Test.
Then you might suspect issue with Deployment Or Environment

2) These applications are deployed in OS, and OS[Operating System] is having OS patching.
System Would be re-booted that may cause manual work
  2.1) Precheck on Application before OS patching start.
  2.2) Shut down the application
  2.3) OS patching
  2.4) Start up the application
  2.5) Post of Application

To solve this things we have docker.

What is docker? Docker is a deployment tool.

1) Host deployment- Here We would be following instruction given by Application Development team

root@ip-172-31-30-18:~# java --version
Command 'java' not found, but can be installed with:
apt install openjdk-11-jre-headless  # version 11.0.20.1+1-0ubuntu1~22.04, or
apt install default-jre              # version 2:1.11-72build2
apt install openjdk-17-jre-headless  # version 17.0.8.1+1~us1-0ubuntu1~22.04
apt install openjdk-18-jre-headless  # version 18.0.2+9-2~22.04
apt install openjdk-19-jre-headless  # version 19.0.2+7-0ubuntu3~22.04
apt install openjdk-8-jre-headless   # version 8u382-ga-1~22.04.1

Error during software installation:

root@ip-172-31-30-18:~# apt install openjdk-17-jre-headless
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
E: Unable to locate package openjdk-17-jre-headless
root@ip-172-31-30-18:~#

apt-get update
apt install openjdk-17-jre-headless
git clone https://github.com/spring-projects/spring-petclinic.git
cd spring-petclinic
./mvnw package
java -jar target/*.jar

Maven
=====
Maven is build tool.

    validate: check if all information necessary for the build is available
    compile: compile the source code
    test-compile: compile the test source code
    test: run unit tests
    package: package compiled source code into the distributable format (jar, war, â€¦)
    integration-test: process and deploy the package if needed to run integration tests
    install: install the package to a local repository
    deploy: copy the package to the remote repository

For Example, let say you have written java program
umesh.java
class HelloWorld {
    public static void main(String[] args) {
        System.out.println("Hello, World!"); 
    }
}

Javac umesh.java # compiling
java umesh # Running the code

Container deployment
====================
> Host deployment is having issue(s)
      1) Taking long time.
      2) Manual deployment.

To solve above two issue, container deployment in introduced.

How to do container deployment?
To do container deployment, we need to convert instruction into docker image.

FROM ubuntu
RUN apt-get update
RUN apt install git -y
RUN apt-get upadte
RUN apt install openjdk-17-jre-headless
RUN git clone https://github.com/spring-projects/spring-petclinic.git
WORKDIR spring-petclinic 
RUN ./mvnw clean package -DskipTests
CMD java -jar target/*.jar

What is docker image?
=====================
Packing application and dependancy into file is known docker file. Once we run docker file we will get docker image.

How to install docker?
======================
curl -fsSL https://get.docker.com -o install-docker.sh
chmod +x install-docker.sh
sh install-docker.sh

How to create docker image?
============================

1) All the docker images are starting with FROM statement
       FROM <OS name>
FROM ubuntu/windows/centos/apline

2) Suppose you want to install any software then you need run below commands
RUN <Linux command>
RUN <Linux command>

TASK: Write a docker image with ubuntu OS, and install java 17 and above on it?

FROM ubuntu
RUN apt-get update
RUN apt install openjdk-17-jre-headless -y

TASK: Write a docker image with ubuntu OS, and install git?
FROM ubuntu
RUN apt-get update
RUN apt install git -y

TASK: Write a docker image with ubuntu OS, and install java 17 and GIT on it?
FROM ubuntu
RUN apt-get update
RUN apt install openjdk-17-jre-headless -y
RUN apt-get update
RUN apt install git -y

Rule3: When you want to print any message, or want to run any executable file, you need to CMD
CMD <Linx command>

Write a docker image to print hello-world in terminal

FROM ubuntu
CMD echo helloworld

Rule4: to create docker file we need to write instruction on dockerfile, and we need to execute below command
        docker build -t <imagename> .

Rule5: to run docker image
       docker run <imagename>

Rule5: Suppose, I want to change directory or I want to perform any other action then I need to pass RUN in front to linux command.

Suppose, you want to change directory
   RUN cd > WORKDIR

TASK# Write docker image for spring petclinic application
=========================================================
Spring Petclinic is a Spring Boot application built using Maven or Gradle. You can build a jar file and run it from the command line (it should work just as well with Java 17 or newer):

git clone https://github.com/spring-projects/spring-petclinic.git
cd spring-petclinic
./mvnw package
java -jar target/*.jar

